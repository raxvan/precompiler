
//--------------------------------------------------
//#inline
#inline "hello world"
//--------------------------------------------------
//#run
#run print("hello world")
//--------------------------------------------------
//#inline-run
#inline-run "print(\'hello world\')"


//--------------------------------------------------
//def undefine test:
#define test 0

x = test + 1

#undef test

//--------------------------------------------------
//define without arguments and ifdef/ifndef
#define test # 1

x = test + 2

#ifdef test
	"test" defined
#else
	error
#endif

#ifndef test
	error
#else
	"test" defined
#endif

#undef test

//--------------------------------------------------
//define arguments testing

#define test (_A,_B) # <_A> <_B>

y = test(1,2)
y = test(,2)
y = test(1,)
y = test(,)


test(1,2,3)
test((1,2),3) //<- characters () are scope begin/end
test([1,2],3) //<- characters [] are scope begin/end
test({1,2},3) //<- characters {} are scope begin/end

#undef test

//--------------------------------------------------
//more "complex" argument capture
#define test A# hello A
>test world

#undef test
//--------------------------------------------------
//#inline with define
#define TEST print("hello world")

#inline TEST
#undef TEST
//--------------------------------------------------
//colapse token

#define foo a+b+c+d
//foo is:
#inline foo

//after colapse
#define a "New A"
#colapse foo
#inline foo


#undef a
#undef foo
//--------------------------------------------------

