//------------------------------------------------------------
#define _
#if value("_") != "":
	#error "`#define _` Failed"
#else
	#run print("`#define _`->Ok")
#endif

//------------------------------------------------------------
#undef _
#if defined("_") == True:
	#error "`#undef _` Failed"
#else
	#run print("`#undef _`->Ok")
#endif

//------------------------------------------------------------
#define _ data
#if value("_") != "data":
	#error "`#define _ data` Failed"
#else
	#run print("`#define _ data`->Ok")
#endif

//------------------------------------------------------------
#redefine _ #data
#if value("_") != "data":
	#error "`#define _ #data` Failed"
#else
	#run print("`#define _ #data`->Ok")
#endif

//------------------------------------------------------------
#redefine _ #123#>456
#if value("_") != "123#>456":
	#error "`#redefine _ #123#>456` Failed"
#else
	#run print("`#redefine _ #123#>456`->Ok")
#endif

//------------------------------------------------------------
#define data #new_data
#redefine _ data
#colapse _
#if value("_") != "new_data":
	#error "`#colapse _` Failed"
#else
	#run print("`#colapse _`->Ok")
#endif
#undef data
//------------------------------------------------------------
#redefine _ #123#>456
#colapse _
#if value("_") != "123456":
	#error "`#redefine _ #123#>456` Failed"
#else
	#run print("`#redefine _ #123#>456`->Ok")
#endif
//------------------------------------------------------------
#redefine _ #123#.456
#colapse _
#if value("_") != "123456":
	#error "`#redefine _ #123#.456` Failed"
#else
	#run print("`#redefine _ #123#.456`->Ok")
#endif

//------------------------------------------------------------
#redefine _ #123#-456
#colapse _
#if value("_") != "123456":
	#error "`#redefine _ #123#-456` Failed"
#else
	#run print("`#redefine _ #123#-456`->Ok")
#endif

//------------------------------------------------------------
//------------------------------------------------------------
//inline:
#redefine _ ##inline "foo''"
#colapse _
#if value("_") != 'foo\'\'':
	#error "`colapse & #inline \"foo''\"` Failed"
#else
	#run print("`colapse & #inline \"foo''\"` -> Ok")
#endif
//------------------------------------------------------------
#redefine _ ##inline "foo\"\""
#colapse _
#if value("_") != 'foo""':
	#error "`colapse & #inline \"foo\\\"\\"\"` Failed"
#else
	#run print("`colapse & #inline \"foo\\\"\\\"\"` -> Ok")
#endif
//------------------------------------------------------------
#redefine _ ##inline-run 1+2
#colapse _
#if value("_") != "3":
	#error "`colapse & #inline-run 1+2` Failed"
#else
	#run print("`colapse & #inline-run 1+2` -> Ok")
#endif

//------------------------------------------------------------
#redefine _ #1 ,2, /*-*/ 3
#if value("_") != "1 ,2, /*-*/ 3":
	#error "`#redefine _ #1 ,2, /*-*/ 3` Failed"
#else
	#run print("`#redefine _ #1 ,2, /*-*/ 3` -> Ok")
#endif

#cwstrip _
#if value("_") != "1,2,3":
	#error "`#cwstrip 1 ,2, /*-*/ 3` Failed"
#else
	#run print("`#cwstrip 1 ,2, /*-*/ 3` -> Ok")
#endif

//------------------------------------------------------------
//------------------------------------------------------------
//------------------------------------------------------------
//Tests defines with arguments
//TODO, need to fix a docker error and i can't test this
//#define test ARG0#-ARG0-
//#redefine _ #test foo
_
//#colapse _
_
//#if value("_") != "-foo-":
//	#error "`#define test ARG0#-ARG0- & #colapse test foo` Failed"
//#else
//	#run print("`#define test ARG0#-ARG0- & #colapse test foo` -> Ok")
//#endif


